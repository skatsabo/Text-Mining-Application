package textdatamining;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;

public class ExportRefMenu extends javax.swing.JFrame {

    private String path;
    private String input;

    public ExportRefMenu() {
        Image img = Toolkit.getDefaultToolkit().createImage("Blueprint border.jpg");
        ImageIcon im = new ImageIcon();

        BufferedImage img1 = scaleImage(541, 300, "Blueprint border.jpg");

        im.setImage(img1);
        setContentPane(new JLabel(im));

        initComponents();
        input = "";

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserSS = new javax.swing.JFileChooser();
        Sunt = new javax.swing.JCheckBox();
        Sdoe = new javax.swing.JCheckBox();
        KPolD = new javax.swing.JCheckBox();
        DSAPD = new javax.swing.JCheckBox();
        ESDA = new javax.swing.JCheckBox();
        PK = new javax.swing.JCheckBox();
        KPD = new javax.swing.JCheckBox();
        N = new javax.swing.JCheckBox();
        ND = new javax.swing.JCheckBox();
        Dikastirioy = new javax.swing.JCheckBox();
        Plhm = new javax.swing.JCheckBox();
        Efet = new javax.swing.JCheckBox();
        Prot = new javax.swing.JCheckBox();
        ESumv = new javax.swing.JCheckBox();
        SelectAll = new javax.swing.JCheckBox();
        CloseButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        ΑΚ = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        OpenFileButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Sunt.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Sunt.setText("Συντ.");
        Sunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuntActionPerformed(evt);
            }
        });

        Sdoe.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Sdoe.setText("ΣΔΟΕ");
        Sdoe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SdoeActionPerformed(evt);
            }
        });

        KPolD.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        KPolD.setText("ΚΠολΔ");
        KPolD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPolDActionPerformed(evt);
            }
        });

        DSAPD.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        DSAPD.setText("ΔΣΑΠΔ");
        DSAPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DSAPDActionPerformed(evt);
            }
        });

        ESDA.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        ESDA.setText("ΕΣΔΑ");
        ESDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ESDAActionPerformed(evt);
            }
        });

        PK.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        PK.setText("ΠΚ");
        PK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PKActionPerformed(evt);
            }
        });

        KPD.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        KPD.setText("ΚΠΔ");
        KPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KPDActionPerformed(evt);
            }
        });

        N.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        N.setText("Ν.");
        N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NActionPerformed(evt);
            }
        });

        ND.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        ND.setText("ν.δ");
        ND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NDActionPerformed(evt);
            }
        });

        Dikastirioy.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Dikastirioy.setText("Δικαστηρίου");
        Dikastirioy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DikastirioyActionPerformed(evt);
            }
        });

        Plhm.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Plhm.setText("Πλημ/κείου");
        Plhm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlhmActionPerformed(evt);
            }
        });

        Efet.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Efet.setText("Εφετείου");
        Efet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EfetActionPerformed(evt);
            }
        });

        Prot.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        Prot.setText("Πρωτοδικείου");
        Prot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProtActionPerformed(evt);
            }
        });

        ESumv.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        ESumv.setText("Συμβάσεως");
        ESumv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ESumvActionPerformed(evt);
            }
        });

        SelectAll.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        SelectAll.setText("Select All");
        SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllActionPerformed(evt);
            }
        });

        CloseButton.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        CloseButton.setText("Close");
        CloseButton.setMaximumSize(new java.awt.Dimension(95, 25));
        CloseButton.setPreferredSize(new java.awt.Dimension(100, 25));
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        NextButton.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        NextButton.setText("Next >>");
        NextButton.setMaximumSize(new java.awt.Dimension(95, 25));
        NextButton.setMinimumSize(new java.awt.Dimension(95, 25));
        NextButton.setPreferredSize(new java.awt.Dimension(100, 25));
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        ΑΚ.setText("ΑΚ");
        ΑΚ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ΑΚActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel2.setText("Press Open for choose file :");

        OpenFileButton.setText("Open");
        OpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel3.setText("Options Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sunt)
                            .addComponent(PK))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sdoe)
                            .addComponent(KPD)
                            .addComponent(Efet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(N, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Prot, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(KPolD, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DSAPD)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ND)
                                    .addComponent(ESumv))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ΑΚ)
                                    .addComponent(ESDA)
                                    .addComponent(Dikastirioy)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Plhm)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(OpenFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SelectAll)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(OpenFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(SelectAll)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sunt)
                    .addComponent(Sdoe)
                    .addComponent(DSAPD)
                    .addComponent(ESDA)
                    .addComponent(KPolD))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PK)
                    .addComponent(KPD)
                    .addComponent(N)
                    .addComponent(ND)
                    .addComponent(Dikastirioy))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Plhm)
                    .addComponent(Efet)
                    .addComponent(Prot)
                    .addComponent(ESumv)
                    .addComponent(ΑΚ))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SuntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuntActionPerformed
        if (Sunt.isSelected()) {
            if (input.contains("a")) {
                input += "a";
            }
        } else {
            input = input.replace("a", "");
        }
    }//GEN-LAST:event_SuntActionPerformed

    private void SdoeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SdoeActionPerformed
        if (Sdoe.isSelected()) {
            if (input.indexOf("b") == -1) {
                input += "b";
            }
        } else {
            input = input.replace("b", "");
        }
    }//GEN-LAST:event_SdoeActionPerformed

    private void KPolDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPolDActionPerformed
        if (KPolD.isSelected()) {
            if (input.indexOf("c") == -1) {
                input += "c";
            }
        } else {
            input = input.replace("c", "");
        }
    }//GEN-LAST:event_KPolDActionPerformed

    private void DSAPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DSAPDActionPerformed
        if (DSAPD.isSelected()) {
            if (input.indexOf("e") == -1) {
                input += "e";
            }
        } else {
            input = input.replace("e", "");
        }
    }//GEN-LAST:event_DSAPDActionPerformed

    private void ESDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ESDAActionPerformed
        if (ESDA.isSelected()) {
            if (input.indexOf("f") == -1) {
                input += "f";
            }
        } else {
            input = input.replace("f", "");
        }
    }//GEN-LAST:event_ESDAActionPerformed

    private void PKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PKActionPerformed
        if (PK.isSelected()) {
            if (input.indexOf("g") == -1) {
                input += "g";
            }
        } else {
            input = input.replace("g", "");
        }
    }//GEN-LAST:event_PKActionPerformed

    private void KPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KPDActionPerformed
        if (KPD.isSelected()) {
            if (input.indexOf("h") == -1) {
                input += "h";
            }
        } else {
            input = input.replace("h", "");
        }
    }//GEN-LAST:event_KPDActionPerformed

    private void NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NActionPerformed
        if (N.isSelected()) {
            if (input.indexOf("i") == -1) {
                input += "i";
            }
        } else {
            input = input.replace("i", "");
        }
    }//GEN-LAST:event_NActionPerformed

    private void NDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NDActionPerformed
        if (ND.isSelected()) {
            if (input.indexOf("j") == -1) {
                input += "j";
            }
        } else {
            input = input.replace("j", "");
        }
    }//GEN-LAST:event_NDActionPerformed

    private void DikastirioyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DikastirioyActionPerformed
        if (Dikastirioy.isSelected()) {
            if (input.indexOf("k") == -1) {
                input += "k";
            }
        } else {
            input = input.replace("k", "");
        }
    }//GEN-LAST:event_DikastirioyActionPerformed

    private void PlhmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlhmActionPerformed
        if (Plhm.isSelected()) {
            if (input.indexOf("l") == -1) {
                input += "l";
            }
        } else {
            input = input.replace("l", "");
        }
    }//GEN-LAST:event_PlhmActionPerformed

    private void EfetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EfetActionPerformed
        if (Efet.isSelected()) {
            if (input.indexOf("m") == -1) {
                input += "m";
            }
        } else {
            input = input.replace("m", "");
        }
    }//GEN-LAST:event_EfetActionPerformed

    private void ProtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProtActionPerformed
        if (Prot.isSelected()) {
            if (input.indexOf("n") == -1) {
                input += "n";
            }
        } else {
            input = input.replace("n", "");
        }
    }//GEN-LAST:event_ProtActionPerformed

    private void ESumvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ESumvActionPerformed
        if (ESumv.isSelected()) {
            if (input.indexOf("o") == -1) {
                input += "o";
            }
        } else {
            input = input.replace("o", "");
        }
    }//GEN-LAST:event_ESumvActionPerformed

    private void SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllActionPerformed
        if (SelectAll.isSelected()) {
            input = "p";
        } else {
            input = "";
        }

        Sunt.setSelected(SelectAll.isSelected());
        Sdoe.setSelected(SelectAll.isSelected());
        KPolD.setSelected(SelectAll.isSelected());
        DSAPD.setSelected(SelectAll.isSelected());
        ESDA.setSelected(SelectAll.isSelected());
        PK.setSelected(SelectAll.isSelected());
        KPD.setSelected(SelectAll.isSelected());
        N.setSelected(SelectAll.isSelected());
        ND.setSelected(SelectAll.isSelected());
        Dikastirioy.setSelected(SelectAll.isSelected());
        Plhm.setSelected(SelectAll.isSelected());
        Efet.setSelected(SelectAll.isSelected());
        Prot.setSelected(SelectAll.isSelected());
        ESumv.setSelected(SelectAll.isSelected());
        ΑΚ.setSelected(SelectAll.isSelected());
    }//GEN-LAST:event_SelectAllActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed

        if (path != null) {  
            ReadAndWriteDocx open = new ReadAndWriteDocx(path);

            XWPFWordExtractor extract = null;
            try {
                extract = open.ReadDocx();
            } catch (IOException ex) {
            }
            String text = extract.getText();
            XWPFDocument newDoc = open.WriteDocx();
            XWPFParagraph para = newDoc.createParagraph();
            XWPFRun run = para.createRun();
            try {
                ExportReferences exportAll = new ExportReferences(text, para, run, input);
                exportAll.Allreferences();
                ReadAndWriteDocx open1 = new ReadAndWriteDocx(newDoc);
                open1.openNewDocx();
                ExportRefResults frame = new ExportRefResults();
                frame.setDoc(newDoc);
                frame.setList(exportAll.getList());
                frame.setSumALL(exportAll.getSumALL());
                frame.setHeight(exportAll.getHeight());
                frame.main();
                this.dispose();//gia na klhsei to frame
            } catch (Exception ex) {
                System.out.println("Exception Error");
            }
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void ΑΚActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ΑΚActionPerformed
        if (ΑΚ.isSelected()) {
            if (input.indexOf("d") == -1) {
                input += "d";
            }
        } else {
            input = input.replace("d", "");
        }
    }//GEN-LAST:event_ΑΚActionPerformed

    private void OpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileButtonActionPerformed
        if (jFileChooserSS.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            path = jFileChooserSS.getSelectedFile().getAbsolutePath();
            System.out.println(path);
        }
    }//GEN-LAST:event_OpenFileButtonActionPerformed

    public void Main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExportRefMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExportRefMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExportRefMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExportRefMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportRefMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JCheckBox DSAPD;
    private javax.swing.JCheckBox Dikastirioy;
    private javax.swing.JCheckBox ESDA;
    private javax.swing.JCheckBox ESumv;
    private javax.swing.JCheckBox Efet;
    private javax.swing.JCheckBox KPD;
    private javax.swing.JCheckBox KPolD;
    private javax.swing.JCheckBox N;
    private javax.swing.JCheckBox ND;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton OpenFileButton;
    private javax.swing.JCheckBox PK;
    private javax.swing.JCheckBox Plhm;
    private javax.swing.JCheckBox Prot;
    private javax.swing.JCheckBox Sdoe;
    private javax.swing.JCheckBox SelectAll;
    private javax.swing.JCheckBox Sunt;
    private javax.swing.JFileChooser jFileChooserSS;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox ΑΚ;
    // End of variables declaration//GEN-END:variables

    BufferedImage scaleImage(int WIDTH, int HEIGHT, String filename) {
        BufferedImage bi = null;

        try {
            ImageIcon ii = new ImageIcon(filename); // path to image
            bi = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = (Graphics2D) bi.createGraphics();
            g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
            g2d.drawImage(ii.getImage(), 0, 0, WIDTH, HEIGHT, null);
        } catch (Exception e) {
            return null;
        }
        return bi;
    }

}
